//
//  basicshooter.h
//  Hoshizora
//
//  Created by Robert Bu on 9/2/11.
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.
//
#ifndef HTL_basicshooter_h
#define HTL_basicshooter_h

#include "SoraComponent.h"
#include "base/attack.h"
#include "base/constants.h"
#include "base/deltaupdater.h"

#include <list>

namespace atd {
    
    using namespace sora;
    
    class Bullet;
    class Tower;
    class Enemy;
    
    class BasicShooter: public SoraComponent {
    public:
        SORA_DEF_COMPONENT(BasicShooter);
        typedef std::list<Bullet*> BulletCont;
                
        BasicShooter(SoraLightWeightEntity* owner, const std::string& bulletType=SID_BASIC_BULLET);

        virtual void shootBullet();
        
        void onMessage(SoraMessageEvent* evt);
        
        void onUpdate(float dt);
        void onRender();
        
        void onEnemyEnter(Enemy* enemy);
        void onEnemyDied(Enemy* enemy);
        void onEnemyLeave(Enemy* enemy);
        
        void setEnemy(Enemy* obj);
        Enemy* getEnemy() const;
        
        const BulletCont& getBullets() const;
        
        void setBulletType(const std::string& type);
        std::string getBulletType() const;
        
        void setAttack(const Attack& atk);
        const Attack& getAttack() const;
        
        void setShootInterval(float interval);
        float getShootInterval() const;
        
    private:
        Enemy* mObject;
        BulletCont mBullets;
        std::string mBulletType;
        Attack mAttack;
        DeltaUpdater mShootUpdater;
        
        float mPrevDelta;
        
        SoraConnection mEnemyDeadConn;
    };
    
    
} // namespace atd



#endif
